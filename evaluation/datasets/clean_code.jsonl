{"input": "diff --git a/validator.py b/validator.py\nindex 1234567..abcdefg 100644\n--- a/validator.py\n+++ b/validator.py\n@@ -10,6 +10,15 @@ from typing import Optional\n \n class EmailValidator:\n     \"\"\"Validates email addresses with comprehensive checks\"\"\"\n+    \n+    def __init__(self, allow_smtputf8: bool = True):\n+        self.allow_smtputf8 = allow_smtputf8\n+    \n+    def validate(self, email: str) -> bool:\n+        \"\"\"\n+        Validate email address format\n+        \n+        Args:\n+            email: Email address to validate\n+            \n+        Returns:\n+            bool: True if email is valid, False otherwise\n+        \"\"\"\n+        if not email or '@' not in email:\n+            return False\n+            \n+        try:\n+            local, domain = email.rsplit('@', 1)\n+            return self._validate_local(local) and self._validate_domain(domain)\n+        except ValueError:\n+            return False", "target": {"expected_issues": [], "expected_feedback": ["Good: Comprehensive docstrings with Args/Returns", "Good: Proper error handling with try/catch", "Good: Type hints used appropriately", "Good: Clear method naming and structure"], "is_clean_code": true}, "metadata": {"category": "synthetic", "complexity": "medium", "language": "python"}}
